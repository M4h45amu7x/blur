name: Build

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build-type: [release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libx11-dev \
            libxcursor-dev \
            libxinerama-dev \
            libxi-dev \
            libxrandr-dev \
            libgl1-mesa-dev \
            libncurses5

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          env: true
          version: 17

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master
        with:
          version: 1.12.1

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          export CC=clang++ CXX=clang++

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: "cd124b84feb0c02a24a2d90981e8358fdee0e077"

      - name: Select CMake Preset
        id: select-preset
        shell: bash
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            case "${{ matrix.build-type }}" in
              debug) echo "preset=win-debug" ;;
              release) echo "preset=win-release" ;;
              relwithdebinfo) echo "preset=win-relwithdebinfo" ;;
            esac
          else
            case "${{ matrix.build-type }}" in
              debug) echo "preset=unix-debug" ;;
              release) echo "preset=unix-release" ;;
              relwithdebinfo) echo "preset=unix-relwithdebinfo" ;;
            esac
          fi | tee -a $GITHUB_OUTPUT

      - name: Use Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure CMake
        run: cmake --preset ${{ steps.select-preset.outputs.preset }}
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg

      - name: Build
        run: cmake --build . --preset ${{ steps.select-preset.outputs.preset }} -v
        env:
          VCPKG_ROOT: ${{ github.workspace }}/vcpkg

      - name: Upload Binaries
        uses: actions/upload-artifact@v3
        with:
          name: Blur
          path: |
            ${{ runner.os == 'Windows' && 'bin/Release/blur-cli.exe' || 'bin/Release/blur-cli' }}
            ${{ runner.os == 'Windows' && 'bin/Release/blur.exe' || 'bin/Release/blur' }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ env.is_tag == 'true' }}
        with:
          files: |
            ${{ runner.os == 'Windows' && 'bin/Release/blur-cli.exe' || 'bin/Release/blur-cli' }}
            ${{ runner.os == 'Windows' && 'bin/Release/blur.exe' || 'bin/Release/blur' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
